/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>

/* Include all behaviour includes needed by system behaviors/macros */
/* Include behaviour includes needed by key binds - automatically generated */

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-nodefree-config/include/zmk-helpers/helper.h"
#include "zmk-nodefree-config/include/zmk-helpers/key-labels/glove80.h"

#include "behaviors.h"
#include "combos.h"
#include "layer_names.h"
#include "macros.h"

/* Defines */
#define ___ &trans
#define XXX &none

&lt {
    tapping-term-ms = <140>;
};

&caps_word {
    continue-list = <UNDERSCORE BACKSPACE DELETE MINUS>; // Adding minus to the default continue list
};

// BASE
ZMK_LAYER(base,
  &kp F1        &kp F2        &kp F3         &kp F4           &kp F5                                                                                                                                             &kp F6          &kp F7            &kp F8          &kp F9           &kp F10
  &kp EQUAL     &kp N1        &kp N2         &kp N3           &kp N4          &kp N5                                                                                                                     &kp N6  &kp N7          &kp N8            &kp N9          &kp N0           &kp MINUS
  &kp TAB       &kp Q         &kp W          &kp F            &kp P           &kp G                                                                                                                      &kp M   &kp L           &kp U             &kp Y           &kp SEMI         &kp BSLH
  &kp ESC       &hml LGUI A   &hml LALT R    &hml LCTRL S     &hml LSHFT T    &kp V                                                                                                                      &kp K   &hmr RSHFT N    &hmr RCTRL E      &hmr RALT I     &hmr RGUI O      &kp SQT
  &kp GRAVE     &lpt NUM Z    &kp X          &kp C            &kp D           &kp B   &space FN BSPC       &alt_swe                &lower                  &kp RCTRL &kp RGUI     &kp RET                &kp J   &kp H           &kp COMMA         &kp DOT         &rpt PROG FSLH   &kp PG_UP
  &magic 2 0    &kp HOME      &kp END        &kp LBKT         &kp RBKT                &space CURSOR SPACE  &mt LG(LC(LALT)) DEL    &kp LG(LC(LA(LSHIFT)))  &kp TAB   &shiftdance  &space SYMBOLS SPACE           &kp LEFT        &kp DOWN          &kp UP          &kp RIGHT        &kp PG_DN
)

// LOWER
ZMK_LAYER(lower,
  &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV      &kp C_NEXT      &kp C_PP                                                                                              &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  XXX              &kp PAUSE_BREAK
  ___           XXX           XXX             XXX             XXX              &kp HOME                                                      &kp LEFT_PARENTHESIS   &kp KP_NUM  &kp KP_EQUAL  &kp KP_SLASH  &kp KP_MULTIPLY  &kp PRINTSCREEN
  ___           XXX           XXX             &kp UP_ARROW    XXX              &kp END                                                       &kp RIGHT_PARENTHESIS  &kp KP_N7   &kp KP_N8     &kp KP_N9     &kp KP_MINUS     &kp SCROLLLOCK
  ___           XXX           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_UP                                                     &kp PERCENT            &kp KP_N4   &kp KP_N5     &kp KP_N6     &kp KP_PLUS      XXX  
  ___           &kp K_APP     XXX             &kp F11         &kp F12          &kp PG_DN  ___     ___     &to BASE   ___     ___     ___     &kp COMMA              &kp KP_N1   &kp KP_N2     &kp KP_N3     &kp KP_ENTER     ___   
  &magic 2 0    &kp CAPS      &kp INS         &kp F11         &kp F12                     ___     ___     ___        ___     ___     ___                            &kp KP_N0   &kp COMMA     &kp KP_DOT    &kp KP_ENTER     ___   
)

// MAGIC
ZMK_LAYER(magic,
  &bt BT_CLR       XXX              XXX              XXX              XXX                                                                                            XXX    XXX    XXX    XXX    &bt BT_CLR_ALL
  XXX              XXX              XXX              XXX              XXX              XXX                                                                    XXX    XXX    XXX    XXX    XXX    XXX  
  ___              &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                        XXX    XXX    XXX    XXX    XXX    XXX  
  &bootloader      &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                        XXX    XXX    XXX    XXX    XXX    &bootloader
  &sys_reset       XXX              XXX              XXX              XXX              XXX              &bt_2  &bt_3  XXX           XXX    XXX         XXX    XXX    XXX    XXX    XXX    XXX    &sys_reset
  XXX              XXX              XXX              XXX              XXX                               &bt_0  &bt_1  &out OUT_USB  XXX    &caps_word  XXX           XXX    XXX    XXX    XXX    XXX  
)

// NUM
ZMK_LAYER(numpad,
  ___     ___     ___     ___             ___                                                                                              &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  XXX              &kp PAUSE_BREAK
  ___     ___     ___     ___             ___              ___                                                      &kp LEFT_PARENTHESIS   &kp KP_NUM  &kp KP_EQUAL  &kp FSLH      &kp KP_MULTIPLY  &kp PRINTSCREEN
  ___     ___     ___     ___             ___              ___                                                      &kp RIGHT_PARENTHESIS  &kp N7      &kp N8        &kp N9        &kp MINUS     XXX
  ___     ___     ___     ___             ___              ___                                                      &kp PERCENT            &kp N4      &kp N5        &kp N6        &kp KP_PLUS      XXX  
  ___     ___     ___     ___             ___              ___     ___     ___     ___      ___     ___     ___     &kp COMMA              &kp N1      &kp N2        &kp N3        &kp KP_ENTER     &kp LS(TAB)   
  ___     ___     ___     ___             ___                      ___     ___     ___      ___     ___     ___                            &kp N0      &kp N0        &kp DOT       &kp KP_ENTER     &kp TAB
)

// FN
ZMK_LAYER(fn,
  ___     ___     ___     ___     ___                                                                                      ___     ___     ___     ___      ___   
  ___     ___     ___     ___     ___     ___                                                     ___                      ___     ___     ___     ___      ___   
  ___     ___     ___     ___     ___     ___                                                     &kp LEFT_PARENTHESIS     &kp F7  &kp F8  &kp F9  &kp F10  ___   
  ___     ___     ___     ___     ___     ___                                                     &kp RIGHT_PARENTHESIS    &kp F4  &kp F5  &kp F6  &kp F11  ___   
  ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     &kp COLON                &kp F1  &kp F2  &kp F3  &kp F12  ___   
  ___     ___     ___     ___     ___             ___     ___     ___     ___     ___     ___                              ___     ___     ___     ___      ___   
)

// SWE
ZMK_LAYER(swe,
  ___     ___     ___           ___            ___                                                                                   ___     ___     ___    ___    ___   
  ___     ___     ___           ___            ___              ___                                                          ___     ___     ___     ___    ___    ___   
  ___     ___     ___           ___            ___              ___                                                          ___     ___     ___     ___    ___    ___   
  ___     ___     ___           ___            ___              ___                                                          ___     ___     ___     ___    ___    ___   
  ___     ___     ___           ___            ___              ___     ___     &to BASE     ___     ___     ___     ___     ___     ___     ___     ___    ___    ___   
  ___     ___     &SWE_aring    &SWE_aumlaut   &SWE_oumlaut             ___     ___          ___     ___     ___     ___             ___     ___     ___    ___    ___   
)

ZMK_LAYER(empty,
  ___     ___     ___     ___     ___                                                                     ___     ___     ___     ___     ___   
  ___     ___     ___     ___     ___     ___                                                     ___     ___     ___     ___     ___     ___   
  ___     ___     ___     ___     ___     ___                                                     ___     ___     ___     ___     ___     ___   
  ___     ___     ___     ___     ___     ___                                                     ___     ___     ___     ___     ___     ___   
  ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___   
  ___     ___     ___     ___     ___             ___     ___     ___     ___     ___     ___             ___     ___     ___     ___     ___   
)

// LH_PROG
ZMK_LAYER(fn_def,
  ___     ___              ___     ___             ___                                                                                                     ___     ___     ___     ___     ___   
  ___     ___              ___     ___             ___                    ___                                                                      ___     ___     ___     ___     ___     ___   
  ___     ___              &kp LESS_THAN           &kp GREATER_THAN       &kp COLON        ___                                                     ___     ___     ___     ___     ___     ___   
  ___     &kp LEFT_BRACE   &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  ___                                                     ___     ___     ___     ___     ___     ___   
  ___     &kp COMMA        &kp LESS_THAN           &kp GREATER_THAN       &kp KP_MULTIPLY  ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___     ___   
  ___     ___              ___                     ___                    ___                      ___     ___     ___     ___     ___     ___             ___     ___     ___     ___     ___   
)


// CURSOR
ZMK_LAYER(cursor,
  ___     ___               ___             ___           ___                                                                                                                 ___        ___         ___            ___          ___   
  ___     ___               ___             ___           &kp DEL       ___                                                                                       ___         &kp DEL    ___         ___            ___          ___   
  ___     ___               &kp LG(Z)       &kp LG(Z)     &kp BSPC      &kp LG(X)                                                                                 &kp LG(X)   &kp BSPC   &kp LG(Y)   &kp LG(Z)      &kp TAB      ___   
  ___     &kp LGUI          &kp LALT        &kp LCTRL     &kp LSHFT     &kp LG(C)                                                                                 &kp LG(C)   &kp LEFT   &kp DOWN    &kp UP         &kp RIGHT    &kp RSHFT   
  ___     &kp LG(F)         &select_word    &select_line  &kp LG(A)     &kp LG(V)     ___     ___     ___          &select_none   &extend_line   &extend_word     &kp LG(V)   &kp HOME   &kp PG_DN   &kp PG_UP      &kp END      ___   
  ___     &kp LS(LG(G))     &extend_word    &extend_line  &kp LG(G)                   ___     ___     &to BASE     &kp LG(A)      &select_line   &select_word                 ___        ___         ___            ___          ___   
)

// SYMBOLS
ZMK_LAYER(sym,
  ___                ___              ___               ___                ___                                                                                                           ___         ___           ___         ___           ___   
  ___                &kp GRAVE        &kp SQT           &kp DQT            &kp COMMA          &kp SEMI                                                                     &kp SEMI      ___         ___           ___         ___           ___   
  &kp EXCLAMATION    &kp LBRC         &kp LPAR          &kp RPAR           &kp RBRC           &kp QMARK                                                                    &kp COMMA     &kp RSHFT   &kp RCTRL     &kp RALT    &kp RGUI      ___   
  &kp HASH           &kp CARET        &kp EQUAL         &kp UNDERSCORE     &kp DOLLAR         &kp STAR                                                                     &kp DOT       &kp BSPC    &kp TAB       &kp SPACE   &kp ENTER     ___   
  &kp TILDE          &kp LESS_THAN    &kp PIPE          &kp MINUS          &kp GREATER_THAN   &kp FSLH     &kp BSLH      &kp DOT     &kp STAR      ___     ___     ___     &kp FSLH      &kp DEL     &kp LS(TAB)   ___         ___           ___   
  &kp AT             &kp AMPERSAND    &kp LBKT          &kp RBKT           &kp PLUS                        &kp PERCENT   &kp COLON   &kp SEMI      ___     ___     ___                   ___         ___           ___         ___           ___   
)
